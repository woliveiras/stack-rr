services:
  # Download Managers (Torrent)
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    hostname: qbittorrent
    restart: unless-stopped
    volumes:
      - ${ARRPATH}qbittorrent/config:/config
      - ${ARRPATH}downloads:/downloads
    ports:
      - "8081:8081"       # Web Interface
      - "6881:6881"       # TCP Port for Torrents
      - "6881:6881/udp"   # UDP Port for Torrents
    environment:
      - WEBUI_PORT=8081
      - TORRENTING_PORT=6881
    env_file:
      - ./.env

  # Indexers
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    hostname: prowlarr
    restart: unless-stopped
    volumes:
      - ${ARRPATH}prowlarr/config:/config
      - ${ARRPATH}prowlarr/backup:/data/backup
      - ${ARRPATH}downloads:/downloads
    ports:
      - "9696:9696"       # Web Interface
    env_file:
      - ./.env

  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    hostname: jackett
    restart: unless-stopped
    volumes:
      - ${ARRPATH}jackett/data:/config
      - ${ARRPATH}blackhole:/downloads
    ports:
      - "9117:9117"       # Web Interface
    env_file:
      - ./.env

  # Media Management (Movies and Series)
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    hostname: sonarr
    restart: unless-stopped
    volumes:
      - ${ARRPATH}sonarr/config:/config
      - ${ARRPATH}sonarr/backup:/data/backup
      - ${ARRPATH}sonarr/tvshows:/data/tvshows
      - ${ARRPATH}downloads:/downloads
    ports:
      - "8989:8989"       # Web Interface
    env_file:
      - ./.env

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr
    restart: unless-stopped
    volumes:
      - ${ARRPATH}radarr/config:/config
      - ${ARRPATH}radarr/movies:/data/movies
      - ${ARRPATH}radarr/backup:/data/backup
      - ${ARRPATH}downloads:/downloads
    ports:
      - "7878:7878"       # Web Interface
    env_file:
      - ./.env
  
  # Music Management
  lidarr:
      image: ghcr.io/hotio/lidarr:latest
      container_name: lidarr
      restart: unless-stopped
      volumes:
        - ${ARRPATH}/lidarr/config:/config
        - ${ARRPATH}/music:/music
        - ${ARRPATH}/downloads:/downloads
      ports:
        - 8686:8686       # Web Interface
      env_file:
        - ./.env
  
  # Book Management
  readarr:
    image: ghcr.io/hotio/readarr:latest
    container_name: readarr
    restart: unless-stopped
    volumes:
      - ${ARRPATH}/readarr/data:/config
      - ${ARRPATH}/books:/books
      - ${ARRPATH}/download-client-downloads:/downloads
    ports:
      - 8787:8787       # Web Interface


  # Subtitle Management
  bazarr:
    image: ghcr.io/hotio/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    volumes:
      - ${ARRPATH}/bazarr/config:/config
      - ${ARRPATH}radarr/movies:/data/movies
      - ${ARRPATH}sonarr/tvshows:/data/tvshows
    ports:
      - 6767:6767       # Web Interface

  # Multimedia Streaming Servers
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    hostname: jellyfin
    restart: unless-stopped
    volumes:
      - ${ARRPATH}jellyfin/config:/config
      - ${ARRPATH}radarr/movies:/data/movies
      - ${ARRPATH}sonarr/tvshows:/data/tvshows
    ports:
      - "8096:8096/tcp"   # Web Interface
      - "7359:7359/udp"   # Auto Discovery
      - "1900:1900/udp"   # DLNA/UPnP
    env_file:
      - ./.env

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    hostname: plex
    network_mode: host # The port will be 32400, access via IP:32400/web
    restart: unless-stopped
    environment:
      - VERSION=docker
      # If you want Plex to be automatically claimed, uncomment and add your token:
      # - PLEX_CLAIM=<YOUR_PLEX_CLAIM_TOKEN>
    volumes:
      - ${ARRPATH}plex/config:/config
      - ${ARRPATH}sonarr/tvshows:/data/tvshows
      - ${ARRPATH}radarr/movies:/data/movies
    env_file:
      - ./.env
